buildscript {
  dependencies {
    classpath("com.dipien:semantic-version-gradle-plugin:2.0.0")
  }
  repositories {
    mavenLocal()
    mavenCentral()
    gradlePluginPortal()
  }
}

plugins {
  id 'io.github.gradle-nexus.publish-plugin' version '2.0.0'
  id "com.diffplug.spotless" version "6.11.0"
}

version = "1.25.0"

apply plugin: "com.dipien.semantic-version"
version = project.findProperty("ddprof_version") ?: version

allprojects {
  repositories {
    mavenCentral()
    mavenCentral()
    gradlePluginPortal()
  }
}

repositories {
  mavenLocal()
  mavenCentral()
  gradlePluginPortal()

  maven {
    content {
      includeGroup "com.datadoghq"
    }
    mavenContent {
      snapshotsOnly()
    }
    url 'https://oss.sonatype.org/content/repositories/snapshots/'
  }
}

allprojects {
  group = 'com.datadoghq'

  apply from: rootProject.file('common.gradle')
  apply from: rootProject.file('gradle/configurations.gradle')
  apply from: "$rootDir/gradle/spotless.gradle"
}

subprojects {
  version = rootProject.version
}

apply from: rootProject.file('common.gradle')
apply from: rootProject.file('gradle/configurations.gradle')

def isCI = System.getenv("CI") != null

nexusPublishing {
  repositories {
    def forceLocal = project.hasProperty('forceLocal')

    if (forceLocal && !isCI) {
      local {
        // For testing use with https://hub.docker.com/r/sonatype/nexus
        // docker run --rm -d -p 8081:8081 --name nexus sonatype/nexus
        // Doesn't work for testing releases though... (due to staging)
        nexusUrl = uri("http://localhost:8081/nexus/content/repositories/releases/")
        snapshotRepositoryUrl = uri("http://localhost:8081/nexus/content/repositories/snapshots/")
        username = "admin"
        password = "admin123"
      }
    } else {
      sonatype {
        username = System.getenv("SONATYPE_USERNAME")
        password = System.getenv("SONATYPE_PASSWORD")
      }
    }
  }
}
